系统：
  查看IP：ifconfig
  查看内核版本： uname -r
  关机:   shutdown -h now
  重启
  命令补全: TAB键

更新源
vim /etc/apt/sources.list

看PDF
 evince [filename] 
图片
 eog
  
目录文件夹：
  确定目录： pwd
  进入目录:  cd ***
  进入根目录：cd /          cd //进入主目录
  当前目录下的文件： ls     ls -a 等
  返回上此目录： cd -
  上级目录：   cd ../
  创建：mkdir ***
  删除：rm -rf ***    //递归删除目录及其内容      rmdir //删除空文件夹         
  移动更名： mv    
  解压：tar -vcf xxx.tar.gz xxx 或 tar -vxf xxx.tar.gz

安装：

  
vim文本编辑器:
  hjkl代表左、下、上、右
  命令模式：  ESC
  编辑模式：  i
  选中:       v
  复制：      y        yy//行      y$//当前道末尾
  粘贴放置：  p
  删除:       d        dd//行
  撤销操作：  u
  保存：      w
  退出：      q        q!//强制退出   wq //保存退出
  一行开头：  0        $ //一行末尾
  移动单词：  w        b //后退一单词
  文件末尾：  G 
  替换：      s 
  新建文本：  vi ***
  刷新：e
  查看当前文件：f
  设置TAB键的长度： :set tabstop=4
  开启自动缩进      :set autoindent   
  停止缩进          ctrl+d
  打开行号：        :set nu
  多个文件(新增.c)  sp *.c(ctrl+w+s)  跳转(ctrl+w+上)
  批量注释： ：v  + 方向键 选中需要注释的区域  control + v 进入列模式  按I进入编辑 结束后按两次esc 
  批量取消： control + v 选中注释 按 d 

安全：查找系统中admin普通用户的密码：cat /etc/shadow | grep "admin"
GCC编译器:
          gcc -lm //加入数学库
          

GDB调试器：gcc -g 1.c -o 1.o

进程：
 
echo命令:用于字符串的输出
  echo string
  echo -e "OK! \n" # -e 开启转义
显示结果定向至文件
  echo "It is a test" > myfile

查看性能：
  mpstart-P ALL 5
  lscpu
  CPU :sar -u 1 5
%us：表示用户空间程序的cpu使用率（没有通过nice调度）
%sy：表示系
统空间的cpu使用率，主要是内核程序。
%ni：表示用户空间且通过nice调度过的程序的cpu使用率。
%id：空闲cpu
%wa：cpu运行时在等待io的时间
%hi：cpu处理硬中断的数量
%si：cpu处理软中断的数量
%st：被虚拟机偷走的cpu

dd if=/dev/zero of=test bs=64k count=4k oflag=dsync

ssh
本地复制远程文件：（把远程的文件复制到本地）
scp root@www.test.com:/val/test/test.tar.gz /val/test/test.tar.gz
远程复制本地文件：（把本地的文件复制到远程主机上）
scp /val/test.tar.gz root@www.test.com:/val/test.tar.gz
本地复制远程目录：（把远程的目录复制到本地）
scp -r root@www.test.com:/val/test/ /val/test/
远程复制本地目录：（把本地的目录复制到远程主机上）
scp -r ./ubuntu_env/ root@192.168.0.111:/home/pipi

terminstor
  垂直分割：ctrl+shift+e
  水平分割：ctrl+shift_o
  
检查端口权限 ls -l /dev |grep ttyUSB
设置端口权限666 sudo chmod 666 /dev/ttyUSB0

查看boost安装版本：
$ dpkg -S /usr/include/boost/version.hpp
卸载boost:
$ sudo apt-get autoremove package
(注：package为要卸载的boost的名称 示例：sudo apt-get autoremove libboost1.55-dev)
更新boost:
$ sudo add-apt-repository ppa:boost-latest/ppa
$ sudo apt-get update
查看可安装的boost:
$ aptitude search boost
安装boost(以安装boost1.55示例):
$ sudo apt-get install libboost1.55-dev


chmod整个命令的形式的用法如下： 
sudo chmod 777 ××× （每个人都有读和写以及执行的权限）
sudo chmod 644 ××× （所有者有读和写的权限，组用户只有读的权限）
sudo chmod -（代表类型）×××（所有者）×××（组用户）×××（其他用户）
三位数的每一位都表示一个用户类型的权限设置。取值是0～7，即二进制的[000]~[111]。

这个三位的二进制数的每一位分别表示读、写、执行权限。

如000表示三项权限均无，而100表示只读。这样，我们就有了下面的对应：

0 [000] 无任何权限

4 [100] 只读权限

6 [110] 读写权限

7 [111] 读写执行权限

修改shutdown的权限
cd /sbin
chmod u+s shutdown

查看文件大小
ls -alh

打包
tar -tvf 压缩包.tar [文件]
解包
tar -xf 压缩包.tar

linux 时间转化 date -d '2018-1-1 11:11' +%s
当前时间 date +%s
数字转化为时间：date -d "@214321" 
修改linux时间：sudo date -s 06/27/2018    sudo date -s 17:55:55  避免重启失效 hwclock -w

tail -f + 文件 持续输出

linux 编译boost库的程序
g++ -I/usr/local/inlcude -L/usr/local/lib example.cpp -lboost_thread -o example -lboost_system

卸载软件
sudo apt-get autoremove --purge XXX

